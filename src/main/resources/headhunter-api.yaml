openapi: 3.0.3
info:
  title: "HeadHunter API"
  version: 1.0.0
servers:
  - url: "http://localhost:8080/api/headhunter"
tags:
  - name: Company
  - name: Cv
  - name: SignIn
  - name: SignUp
  - name: Vacancy
  - name: ConfirmAccount
security:
  - bearerAuth: []
paths:
  /api/signIn/:
    post:
      operationId: signIn
      tags:
        - SignIn
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInForm'
      responses:
        200:
          description: asd
          content:
            application/json:
              schema:
                type: string
  /api/signUp/:
    post:
      operationId: signUp
      security: []
      tags:
        - SignUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/headhunter/companies/:
    post:
      operationId: createCompany
      security:
        - BasicAuth: [ ]
      tags:
        - Company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'
    get:
      operationId: getCompanies
      security:
        - BasicAuth: [ ]
      parameters:
        - name: page
          required: true
          schema:
            type: integer
            format: int64
          in: query
        - name: sortBy
          required: false
          schema:
            type: string
            nullable: true
          in: query
      tags:
        - Company
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompaniesPageDto'
  /api/headhunter/cv/:
    post:
      operationId: createCV
      security:
        - BasicAuth: [ ]
      tags:
        - Cv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVDto'
    get:
      operationId: getAllCV
      security:
        - BasicAuth: [ ]
      parameters:
        - name: page
          required: true
          schema:
            type: integer
            format: int64
          in: query
        - name: sortBy
          required: false
          schema:
            type: string
            nullable: true
          in: query
      tags:
        - Cv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVPageDto'
  /api/headhunter/vacancy/:
    post:
      operationId: createVacancy
      security:
        - BasicAuth: [ ]
      tags:
        - Vacancy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDto'
    get:
      operationId: getAllVacancy
      security:
        - BasicAuth: [ ]
      parameters:
        - name: page
          required: true
          schema:
            type: integer
            format: int64
          in: query
        - name: sortBy
          required: false
          schema:
            type: string
            nullable: true
          in: query
      tags:
        - Vacancy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesPageDto'
  /api/headhunter/vacancy/getByCompany:
    get:
      operationId: getByCompany
      security:
        - BasicAuth: [ ]
      parameters:
        - name: companyId
          required: true
          schema:
            type: integer
            format: int64
          in: query
        - name: page
          required: true
          schema:
            type: integer
            format: int64
          in: query
        - name: sortBy
          required: false
          schema:
            type: string
            nullable: true
          in: query
      tags:
        - Vacancy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesPageDto'
  /api/headhunter/vacancy/getBySpecialization:
    get:
      operationId: getBySpecialization
      security:
        - BasicAuth: [ ]
      parameters:
        - name: specialization
          required: true
          schema:
            type: string
          in: query
        - name: page
          required: true
          schema:
            type: integer
            format: int64
          in: query
        - name: sortBy
          required: false
          schema:
            type: string
            nullable: true
          in: query
      tags:
        - Vacancy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesPageDto'
  /api/headhunter/vacancy/respond:
    post:
      operationId: respondToVacancy
      security:
        - BasicAuth: [ ]
      parameters:
        - name: vacancyId
          required: true
          schema:
            type: integer
            format: int64
          in: query
      tags:
        - Vacancy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyResponseDto'
  /api/headhunter/confirm/{confirm-code}/:
    get:
      operationId: confirmAccount
      security:
        - BasicAuth: [ ]
      parameters:
        - name: confirm-code
          required: true
          schema:
            type: string
          in: path
      tags:
        - ConfirmAccount
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/headhunter/sendAnotherConfirmCode/{confirm-code}/:
    get:
      operationId: sendAnotherConfirmCode
      security:
        - BasicAuth: [ ]
      parameters:
        - name: confirm-code
          required: true
          schema:
            type: string
          in: path
      tags:
        - ConfirmAccount
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/headhunter/vacancy/acceptResponse:
    post:
      operationId: acceptResponse
      security:
        - BasicAuth: [ ]
      parameters:
        - name: vacancyResponseId
          required: true
          schema:
            type: integer
            format: int64
          in: query
      tags:
        - Vacancy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/headhunter/vacancy/addToFavorites:
    post:
      operationId: addToFavorites
      security:
        - BasicAuth: [ ]
      parameters:
        - name: vacancyId
          required: true
          schema:
            type: integer
            format: int64
          in: query
      tags:
        - Vacancy
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDto'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AccountDto:
      type: object
    AccountDtoList:
      type: array
      items:
        $ref: '#/components/schemas/AccountDto'
    SignInForm:
      $ref: '#/components/schemas/SignInForm'
    SignUpForm:
      $ref: '#/components/schemas/SignUpForm'
    CompanyForm:
      $ref: '#/components/schemas/CompanyForm'
    CompanyDto:
      type: object
    CompanyDtoList:
      type: array
      items:
        $ref: '#/components/schemas/CompanyDto'
    CVForm:
      $ref: '#/components/schemas/CVForm'
    CVDto:
      type: object
    CVDtoList:
      type: array
      items:
        $ref: '#/components/schemas/CVDto'
    VacancyForm:
      $ref: '#/components/schemas/VacancyForm'
    VacancyDto:
      type: object
    VacancyDtoList:
      type: array
      items:
        $ref: '#/components/schemas/VacancyDto'
    VacancyResponseDto:
      type: object
    AccountsPageDto:
      type: object
    CompaniesPageDto:
      type: object
    CVPageDto:
      type: object
    VacanciesPageDto:
      type: object